// # Global Import
@import "./app/styling/theme.scss";

// ==========================
// [    global variables    ]
// ==========================

$global-transition: 0.1s;
// FIXME: rework this system
// $media-query-mobile: 768px;
// $media-query-wide: 2000px;

// ==========================
// [    component mixins    ]
// --------------------------
//  Declare internal
//  attributes with unset
//  value to disable
//  when applied
// ==========================

@mixin transition {
	transition: $global-transition;
}

// @mixin global-max-width($class) {
// 	@if $class ==0 {
// 		max-width: 80%;
// 	} @else if $class ==1 {
// 		max-width: 1320px;
// 	}

// 	// FIXME some parts aren't eligible for this | PLEASE HAVE THE COMPONENTS MARGINS/PADDING GLOBALIZED FOR LEFT AND RIGHT SPACING
// 	@else if $class ==2 {
// 		max-width: 370px;
// 	}
// }

@mixin focus-style {
	&:focus,
	&:focus-within {
		outline: none;
	}

	&:focus-visible {
		outline: 3px solid $info-color;
		outline-offset: 3px;
		transition: none;
	}
}

@mixin no-select {
	-webkit-user-select: none;
	// Safari
	-ms-user-select: none;
	// IE 10 and IE 11
	user-select: none;
	// Standard syntax
}

@mixin shadow {
	box-shadow: 0px 10px 44px -19px $shadow-color;
	-webkit-box-shadow: 0px 10px 44px -19px $shadow-color;
	-moz-box-shadow: 0px 10px 44px -19px $shadow-color;
}

@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin wight($w, $h) {
	width: $w;
	height: $h;
}

@mixin min-wh($w, $h) {
	min-width: $w;
	min-height: $h;
}

@mixin max-wh($w, $h) {
	max-width: $w;
	max-height: $h;
}

@mixin mar-pad($mar, $pad) {
	margin: $mar;
	padding: $pad;
}

@mixin scroll-bar-hide {
	// Firefox
	scrollbar-width: none;

	&::-webkit-scrollbar {
		display: none;
	}
}

// ==========================
// [    component styles    ]
// ==========================

@mixin card {
	@include no-select;
	@include mar-pad(5px, 20px);

	border-radius: 15px;
	background-color: $bg-color;
	// cursor: pointer;

	// &:hover {
	// 	filter: brightness(102%);
	// }

	// &:active {
	// 	filter: brightness(97%);
	// }
}

@mixin button {
	@include shadow;
	@include wight(fit-content, 38px);
	@include mar-pad(unset, 0 15px);
	@include focus-style;
	@include flex-center;

	// extract or create a new default color for buttons
	background-color: $info-color;
	border-radius: 15px;
	border: none;

	cursor: pointer;

	color: $text-color-permanent;
	fill: $text-color-permanent;
	font-size: 14px;
	text-decoration: none;

	&:hover {
		background-color: $info-color;
	}

	&:active {
		background-color: $info-color;
		filter: brightness(140%);
	}

	img {
		fill: unset;
	}
}

@mixin flex-row {
	display: flex;
	flex-direction: row;
}

// ==================================
// [    Custom Bootstrap Methods    ]
// ==================================

// # Buttons

.btn {
	@include button();
}

.primary {
	background-color: $primary-color;

	&:hover {
		background-color: $primary-color-hover;
	}

	&:active {
		background-color: $primary-color;
		filter: brightness(140%);
	}
}

.p-accent {
	background-color: $accent-color;

	&:hover {
		background-color: $accent-color;
	}

	&:active {
		background-color: $accent-color;
		filter: brightness(140%);
	}
}

.safe {
	background-color: $safe-color;

	&:hover {
		background-color: $safe-color;
	}

	&:active {
		background-color: $safe-color;
		filter: brightness(140%);
	}
}

.info {
	background-color: $info-color;

	&:hover {
		background-color: $info-color;
	}

	&:active {
		background-color: $info-color;
		filter: brightness(140%);
	}
}

.warn {
	background-color: $warn-color;

	&:hover {
		background-color: $warn-color;
	}

	&:active {
		background-color: $warn-color;
		filter: brightness(140%);
	}
}

.danger {
	background-color: $danger-color;

	&:hover {
		background-color: $danger-color;
	}

	&:active {
		background-color: $danger-color;
		filter: brightness(140%);
	}
}

.ctrl {
	@include mar-pad(0, 0);
	@include no-select;
	@include wight(30px, 30px);
	@include flex-center;
	@include shadow;

	border-radius: 50%;
	border: none;

	:nth-child(n) {
		width: 24px;
	}
}

.disabled {
	background-color: $disabled-color;
	cursor: not-allowed;

	&:hover {
		background-color: $disabled-color;
	}

	&:active {
		background-color: $disabled-color;
		// FIXME: deprecated: reason: fails to submit to z-index rules
		// filter: brightness(140%);
	}
}

// # Card

.card {
	@include card();
}

// # Interface

.Interface {
	@include flex-row();
	background-color: $bg-color-accent;

	.panelA {
		// padding-right: 20px;
		padding-left: 10px;
		height: 100vh;
		width: 200px;

		.primary-navigation {
			@include flex-row();
			align-items: center;
			height: 60px;
			padding: 5px 10px;
		}
	}

	.panelB {
		width: 100%;
		
		.navigation {
			@include flex-row();
			align-items: center;
			justify-content: space-between;
			padding: 5px 10px;
			height: 60px;
			
			.sect-B {
				@include flex-row();
				align-items: center;
				gap: 5px;
			}
		}

		.panel-content {
			display: flex;
			flex-direction: column;
			height: 90vh;
			
			.card:nth-child(2) {
				height: 300px;
				// FIXME: WARNING!!! MAKE THIS VIEW DEPENDENT VIA SCREENSPACE COMPUTATION
			}
		}
	}
}

// ==============
// [    root    ]
// ==============

* {
	@include transition();

	font-family: "Poppins", sans-serif;
	box-sizing: border-box;
	// layout debug
	// outline: lime solid 1px;
}

html,
#root,
body {
	@include mar-pad(0, 0);
	@include wight(100vw, 100%);
	scroll-behavior: smooth;
	overflow: hidden;
	background-color: $bg-color;
	color: $text-color;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

input[type="button"],
input[type="email"],
input[type="password"],
input[type="file"],
input[type="text"],
input[type="reset"],
textarea,
select {
	@include button;

	background-color: $bg-color;
	color: $text-color;
	outline: 1px solid $text-color-alt;
	border-radius: 5px;

	resize: none;
	@include mar-pad(10px 0px, 10px);
	@include wight(100%, 30px);

	&:hover {
		background-color: $bg-color-accent;
	}

	&:active {
		background-color: $bg-color-accent;
		filter: unset;
	}

	&:disabled,
	&[disabled] {
		cursor: not-allowed;
		filter: none;
		opacity: 0.5;
	}
}

input[type="file"] {
	display: none;
}

.disable-events {
	pointer-events: none;
}

.dragging-over {
	outline: 4px solid $info-color;
	outline-offset: 4px;
	animation: outlineTransitionA 2s cubic-bezier(0.45, 0, 0.53, 1) 0s infinite normal forwards;
}

.dragging-over-active {
	outline: 4px solid $accent-color;
	outline-offset: 4px;
	animation: outlineTransitionB 0.3s cubic-bezier(0.45, 0, 0.53, 1) 0s 1 normal forwards;
}

@keyframes outlineTransitionA {
	0%,
	50%,
	100% {
		filter: brightness(100%);
	}

	25%,
	75% {
		filter: brightness(130%);
	}
}

@keyframes outlineTransitionB {
	0% {
		outline-offset: 4px;
	}

	100% {
		outline-offset: 0px;
	}
}

a {
	@include focus-style;
	text-decoration: none;
	color: $text-color-alt;

	&:hover {
		text-decoration: underline;
	}

	&:active {
		color: $primary-color;
	}
}

button {
	@include focus-style;
}

// @media only screen and (max-width: $media-query-mobile) {
// 	* {
// 		@include no-select;
// 	}
// }
